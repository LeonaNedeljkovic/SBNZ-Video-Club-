//created on: May 21, 2020
package com.videoClub.rules.badge

import com.videoClub.model.*;
import com.videoClub.model.drl.*;
import com.videoClub.model.enumeration.*;

rule "ArtistReviewBadge acquirement rule"
	lock-on-active
    when
    	$artist : Artist( $id : id );
    	$conclusion : UserConclusion( $user : user, $reviews : user.getReviews() );
    	Number( $watchedNum : intValue ) from accumulate(
         	$review : Review( this memberOf $reviews, watched == true, rate == 0, film memberOf $artist.getRoles() 
         	|| $artist.getId() == film.getDirector().getId() || $artist.getId() == film.getWrittenBy().getId()),
         	count( $review ) );
     	Number( $unwatchedNum : intValue, $unwatchedNum + $watchedNum > 0 ) from accumulate(
         	$review : Review( this memberOf $reviews, watched == false, film memberOf $artist.getRoles() 
         	|| $artist.getId() == film.getDirector().getId() || $artist.getId() == film.getWrittenBy().getId()),
         	count( $review ) );
    then
    	System.out.println("User acquired ArtistReviewBadge for: " + $artist.getName() + " " + $artist.getSurname()
    	+ ". Watched films: " + $watchedNum + ", Unwatched films: " + $unwatchedNum);
    	$conclusion.getBadges().add(new ArtistReviewBadge($artist, $watchedNum, $unwatchedNum));
    	update($conclusion);
    	update($artist);
end

rule "ArtistRateBadge badge acquirement rule"
	lock-on-active
    when
    	$artist : Artist( $id : id );
    	$conclusion : UserConclusion( $user : user, $reviews : user.getReviews(), $favouriteFilms : user.getFavouriteFilms() );
    	Number( doubleValue > 0, $rating : doubleValue ) from accumulate(
         	$review : Review( this memberOf $reviews, $rate : rate, rate > 0, film memberOf $artist.getRoles()
         	|| $artist.getId() == film.getDirector().getId() || $artist.getId() == film.getWrittenBy().getId()),
         	average( $rate ) );
        Number( $favourites : intValue ) from accumulate(
         	$review : Review( this memberOf $reviews, film memberOf $favouriteFilms, film memberOf $artist.getRoles()
         	|| $artist.getId() == film.getDirector().getId() || $artist.getId() == film.getWrittenBy().getId()),
         	count( $review ) );
    then
    	System.out.println("User acquired ArtistRateBadge badge for: " + $artist.getName() + " " + $artist.getSurname());
    	$conclusion.getBadges().add(new ArtistRateBadge($artist, $rating, $favourites));
    	update($conclusion);
    	update($artist);
end

